import streamlit as st
from transformers import pipeline


st.set_page_config(
    page_title="–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è —Ç–µ–∫—Å—Ç–∞",
    page_icon="üìù",
    layout="centered",
)


@st.cache_resource
def load_classifier():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç zero-shot –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–¥–∏–Ω —Ä–∞–∑."""
    return pipeline(
        "zero-shot-classification",
        model="MoritzLaurer/mDeBERTa-v3-base-mnli-xnli",
    )


labels = [
    "–Ω–∞—É—á–Ω—ã–π —Å—Ç–∏–ª—å",
    "—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å",
    "–ø—É–±–ª–∏—Ü–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å",
    "—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Å—Ç–∏–ª—å",
]

st.title("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è —Ç–µ–∫—Å—Ç–∞")

user_text = st.text_area("–¢–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:", height=200)

if st.button("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∏–ª—å"):
    cleaned_text = user_text.strip()
    if not cleaned_text:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
    else:
        classifier = load_classifier()
        with st.spinner("–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å..."):
            result = classifier(cleaned_text, candidate_labels=labels)

        best_label = result["labels"][0]
        best_score = result["scores"][0]

        st.success(
            f"–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Å—Ç–∏–ª—å: **{best_label}** ({best_score * 100:.1f}%)")
